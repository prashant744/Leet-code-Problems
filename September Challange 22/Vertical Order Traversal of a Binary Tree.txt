/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        queue<pair<TreeNode*,int>>q;
        q.push({root, 0});
        map<int,vector<int>>mp;
        vector<vector<int>>res;
        while(!q.empty()){
            int sz=q.size();
            map<int,multiset<int>>temp;
            while(sz--){
                auto elem = q.front();q.pop();
                temp[elem.second].insert(elem.first->val);
                if(elem.first->left){
                    q.push({elem.first->left,elem.second-1});
                }
                if(elem.first->right){
                    q.push({elem.first->right,elem.second+1});
                }
            }
            
            for(auto elem:temp){
                for(auto iter : elem.second){
                    mp[elem.first].push_back(iter);
                }
            }
        }
        for(auto elem : mp){
            res.push_back(elem.second);
        }
        return res;
    }
};