/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int calc(TreeNode *root,int val){
        if(root==nullptr){
            return 0;
        }
        
        if(root->left==nullptr && root->right==nullptr){
            return __builtin_popcount(val^(1<<root->val))<2;
        }
        val^=(1<<root->val);
        return calc(root->left,val)+calc(root->right,val);
              
    }
    int pseudoPalindromicPaths (TreeNode* root) {
        return calc(root,0);
    }
};