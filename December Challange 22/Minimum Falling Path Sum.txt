class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
        int n=matrix.size();
        vector<vector<int>>dp(2,vector<int>(n+2,0));
        for(int i=0;i<n;i++){
            dp[0][i+1]=matrix[0][i];
        }
        dp[0][0]=INT_MAX,dp[0][n+1]=INT_MAX;
        dp[1][0]=INT_MAX,dp[1][n+1]=INT_MAX;

        int curr=1,prev=0;
        for(int i=1;i<n;i++){
            for(int j=0;j<n;j++){
                dp[curr][j+1] = min(dp[prev][j], min(dp[prev][j+1], dp[prev][j+2])) + matrix[i][j];
            }
            swap(curr,prev);
        }
        int min_sum = INT_MAX;
        for(int i = 1; i <= n; i++)
            if(dp[prev][i] < min_sum)
                min_sum = dp[prev][i];
        return min_sum;
    }
};